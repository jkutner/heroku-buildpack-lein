#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# parse args
export BUILD_DIR=$1
export CACHE_DIR=$2
export ENV_DIR=$3

# Load config vars into environment
export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|JAVA_OPTS)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env_dir $ENV_DIR

LEIN_VERSION=${LEIN_VERSION:-"2.5.1"}
LEIN_BIN_SOURCE="$(dirname $0)/../opt/lein2"

# install leiningen jar
LEIN_JAR_URL="https://heroku-buildpack-clojure.s3.amazonaws.com/leiningen-$LEIN_VERSION-standalone.jar"
LEIN_JAR_CACHE_PATH="$CACHE_DIR/leiningen-$LEIN_VERSION-standalone.jar"
LEIN_JAR_SLUG_PATH="$BUILD_DIR/.lein/leiningen-$LEIN_VERSION-standalone.jar"

if [ ! -r "$LEIN_JAR_CACHE_PATH" ]; then
  echo "-----> Installing Leiningen"
  echo "       Downloading: leiningen-$LEIN_VERSION-standalone.jar"
  mkdir -p $(dirname $LEIN_JAR_CACHE_PATH)
  curl --silent --show-error --max-time 120 -L -o "$LEIN_JAR_CACHE_PATH" $LEIN_JAR_URL
else
  echo "-----> Using cached Leiningen $LEIN_VERSION"
fi

mkdir -p "$BUILD_DIR/.lein"
cp "$LEIN_JAR_CACHE_PATH" "$LEIN_JAR_SLUG_PATH"

# install lein script
LEIN_BIN_PATH="$BUILD_DIR/.lein/bin/lein"
echo "       Writing: lein script"
mkdir -p $(dirname $LEIN_BIN_PATH)
cp $LEIN_BIN_SOURCE $LEIN_BIN_PATH
sed -i s/##LEIN_VERSION##/$LEIN_VERSION/ $LEIN_BIN_PATH

# create user-level profiles
LEIN_PROFILES_SOURCE="$(dirname $0)/../opt/profiles.clj"
cp -n $LEIN_PROFILES_SOURCE "$BUILD_DIR/.lein/profiles.clj"

# populate profile.d
PROFILE_PATH="$BUILD_DIR/.profile.d/clojure.sh"
mkdir -p $(dirname $PROFILE_PATH)

echo "export LEIN_NO_DEV=\"\${LEIN_NO_DEV:-yes}\"" >> $PROFILE_PATH
echo 'export PATH="$HOME/.jdk/bin:$HOME/.lein/bin:$PATH"' >> $PROFILE_PATH
